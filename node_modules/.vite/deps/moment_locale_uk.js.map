{
  "version": 3,
  "sources": ["../../moment/locale/uk.js"],
  "sourcesContent": ["//! moment.js locale configuration\n//! locale : Ukrainian [uk]\n//! author : zemlanin : https://github.com/zemlanin\n//! Author : Menelion Elensúle : https://github.com/Oire\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n    //! moment.js locale configuration\n\n    function plural(word, num) {\n        var forms = word.split('_');\n        return num % 10 === 1 && num % 100 !== 11\n            ? forms[0]\n            : num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20)\n            ? forms[1]\n            : forms[2];\n    }\n    function relativeTimeWithPlural(number, withoutSuffix, key) {\n        var format = {\n            ss: withoutSuffix ? 'секунда_секунди_секунд' : 'секунду_секунди_секунд',\n            mm: withoutSuffix ? 'хвилина_хвилини_хвилин' : 'хвилину_хвилини_хвилин',\n            hh: withoutSuffix ? 'година_години_годин' : 'годину_години_годин',\n            dd: 'день_дні_днів',\n            MM: 'місяць_місяці_місяців',\n            yy: 'рік_роки_років',\n        };\n        if (key === 'm') {\n            return withoutSuffix ? 'хвилина' : 'хвилину';\n        } else if (key === 'h') {\n            return withoutSuffix ? 'година' : 'годину';\n        } else {\n            return number + ' ' + plural(format[key], +number);\n        }\n    }\n    function weekdaysCaseReplace(m, format) {\n        var weekdays = {\n                nominative:\n                    'неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота'.split(\n                        '_'\n                    ),\n                accusative:\n                    'неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу'.split(\n                        '_'\n                    ),\n                genitive:\n                    'неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи'.split(\n                        '_'\n                    ),\n            },\n            nounCase;\n\n        if (m === true) {\n            return weekdays['nominative']\n                .slice(1, 7)\n                .concat(weekdays['nominative'].slice(0, 1));\n        }\n        if (!m) {\n            return weekdays['nominative'];\n        }\n\n        nounCase = /(\\[[ВвУу]\\]) ?dddd/.test(format)\n            ? 'accusative'\n            : /\\[?(?:минулої|наступної)? ?\\] ?dddd/.test(format)\n            ? 'genitive'\n            : 'nominative';\n        return weekdays[nounCase][m.day()];\n    }\n    function processHoursFunction(str) {\n        return function () {\n            return str + 'о' + (this.hours() === 11 ? 'б' : '') + '] LT';\n        };\n    }\n\n    var uk = moment.defineLocale('uk', {\n        months: {\n            format: 'січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня'.split(\n                '_'\n            ),\n            standalone:\n                'січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень'.split(\n                    '_'\n                ),\n        },\n        monthsShort: 'січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд'.split(\n            '_'\n        ),\n        weekdays: weekdaysCaseReplace,\n        weekdaysShort: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n        weekdaysMin: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D MMMM YYYY р.',\n            LLL: 'D MMMM YYYY р., HH:mm',\n            LLLL: 'dddd, D MMMM YYYY р., HH:mm',\n        },\n        calendar: {\n            sameDay: processHoursFunction('[Сьогодні '),\n            nextDay: processHoursFunction('[Завтра '),\n            lastDay: processHoursFunction('[Вчора '),\n            nextWeek: processHoursFunction('[У] dddd ['),\n            lastWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                    case 3:\n                    case 5:\n                    case 6:\n                        return processHoursFunction('[Минулої] dddd [').call(this);\n                    case 1:\n                    case 2:\n                    case 4:\n                        return processHoursFunction('[Минулого] dddd [').call(this);\n                }\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'за %s',\n            past: '%s тому',\n            s: 'декілька секунд',\n            ss: relativeTimeWithPlural,\n            m: relativeTimeWithPlural,\n            mm: relativeTimeWithPlural,\n            h: 'годину',\n            hh: relativeTimeWithPlural,\n            d: 'день',\n            dd: relativeTimeWithPlural,\n            M: 'місяць',\n            MM: relativeTimeWithPlural,\n            y: 'рік',\n            yy: relativeTimeWithPlural,\n        },\n        // M. E.: those two are virtually unused but a user might want to implement them for his/her website for some reason\n        meridiemParse: /ночі|ранку|дня|вечора/,\n        isPM: function (input) {\n            return /^(дня|вечора)$/.test(input);\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'ночі';\n            } else if (hour < 12) {\n                return 'ранку';\n            } else if (hour < 17) {\n                return 'дня';\n            } else {\n                return 'вечора';\n            }\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-(й|го)/,\n        ordinal: function (number, period) {\n            switch (period) {\n                case 'M':\n                case 'd':\n                case 'DDD':\n                case 'w':\n                case 'W':\n                    return number + '-й';\n                case 'D':\n                    return number + '-го';\n                default:\n                    return number;\n            }\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 7th is the first week of the year.\n        },\n    });\n\n    return uk;\n\n})));\n"],
  "mappings": "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",
  "names": []
}
