{
  "version": 3,
  "sources": ["../../moment/dist/locale/uk.js"],
  "sourcesContent": ["//! moment.js locale configuration\n//! locale : Ukrainian [uk]\n//! author : zemlanin : https://github.com/zemlanin\n//! Author : Menelion Elensúle : https://github.com/Oire\n\nimport moment from '../moment';\n\nfunction plural(word, num) {\n    var forms = word.split('_');\n    return num % 10 === 1 && num % 100 !== 11\n        ? forms[0]\n        : num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20)\n        ? forms[1]\n        : forms[2];\n}\nfunction relativeTimeWithPlural(number, withoutSuffix, key) {\n    var format = {\n        ss: withoutSuffix ? 'секунда_секунди_секунд' : 'секунду_секунди_секунд',\n        mm: withoutSuffix ? 'хвилина_хвилини_хвилин' : 'хвилину_хвилини_хвилин',\n        hh: withoutSuffix ? 'година_години_годин' : 'годину_години_годин',\n        dd: 'день_дні_днів',\n        MM: 'місяць_місяці_місяців',\n        yy: 'рік_роки_років',\n    };\n    if (key === 'm') {\n        return withoutSuffix ? 'хвилина' : 'хвилину';\n    } else if (key === 'h') {\n        return withoutSuffix ? 'година' : 'годину';\n    } else {\n        return number + ' ' + plural(format[key], +number);\n    }\n}\nfunction weekdaysCaseReplace(m, format) {\n    var weekdays = {\n            nominative:\n                'неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота'.split(\n                    '_'\n                ),\n            accusative:\n                'неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу'.split(\n                    '_'\n                ),\n            genitive:\n                'неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи'.split(\n                    '_'\n                ),\n        },\n        nounCase;\n\n    if (m === true) {\n        return weekdays['nominative']\n            .slice(1, 7)\n            .concat(weekdays['nominative'].slice(0, 1));\n    }\n    if (!m) {\n        return weekdays['nominative'];\n    }\n\n    nounCase = /(\\[[ВвУу]\\]) ?dddd/.test(format)\n        ? 'accusative'\n        : /\\[?(?:минулої|наступної)? ?\\] ?dddd/.test(format)\n        ? 'genitive'\n        : 'nominative';\n    return weekdays[nounCase][m.day()];\n}\nfunction processHoursFunction(str) {\n    return function () {\n        return str + 'о' + (this.hours() === 11 ? 'б' : '') + '] LT';\n    };\n}\n\nexport default moment.defineLocale('uk', {\n    months: {\n        format: 'січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня'.split(\n            '_'\n        ),\n        standalone:\n            'січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень'.split(\n                '_'\n            ),\n    },\n    monthsShort: 'січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд'.split(\n        '_'\n    ),\n    weekdays: weekdaysCaseReplace,\n    weekdaysShort: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n    weekdaysMin: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'DD.MM.YYYY',\n        LL: 'D MMMM YYYY р.',\n        LLL: 'D MMMM YYYY р., HH:mm',\n        LLLL: 'dddd, D MMMM YYYY р., HH:mm',\n    },\n    calendar: {\n        sameDay: processHoursFunction('[Сьогодні '),\n        nextDay: processHoursFunction('[Завтра '),\n        lastDay: processHoursFunction('[Вчора '),\n        nextWeek: processHoursFunction('[У] dddd ['),\n        lastWeek: function () {\n            switch (this.day()) {\n                case 0:\n                case 3:\n                case 5:\n                case 6:\n                    return processHoursFunction('[Минулої] dddd [').call(this);\n                case 1:\n                case 2:\n                case 4:\n                    return processHoursFunction('[Минулого] dddd [').call(this);\n            }\n        },\n        sameElse: 'L',\n    },\n    relativeTime: {\n        future: 'за %s',\n        past: '%s тому',\n        s: 'декілька секунд',\n        ss: relativeTimeWithPlural,\n        m: relativeTimeWithPlural,\n        mm: relativeTimeWithPlural,\n        h: 'годину',\n        hh: relativeTimeWithPlural,\n        d: 'день',\n        dd: relativeTimeWithPlural,\n        M: 'місяць',\n        MM: relativeTimeWithPlural,\n        y: 'рік',\n        yy: relativeTimeWithPlural,\n    },\n    // M. E.: those two are virtually unused but a user might want to implement them for his/her website for some reason\n    meridiemParse: /ночі|ранку|дня|вечора/,\n    isPM: function (input) {\n        return /^(дня|вечора)$/.test(input);\n    },\n    meridiem: function (hour, minute, isLower) {\n        if (hour < 4) {\n            return 'ночі';\n        } else if (hour < 12) {\n            return 'ранку';\n        } else if (hour < 17) {\n            return 'дня';\n        } else {\n            return 'вечора';\n        }\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}-(й|го)/,\n    ordinal: function (number, period) {\n        switch (period) {\n            case 'M':\n            case 'd':\n            case 'DDD':\n            case 'w':\n            case 'W':\n                return number + '-й';\n            case 'D':\n                return number + '-го';\n            default:\n                return number;\n        }\n    },\n    week: {\n        dow: 1, // Monday is the first day of the week.\n        doy: 7, // The week that contains Jan 7th is the first week of the year.\n    },\n});\n"],
  "mappings": "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",
  "names": []
}
